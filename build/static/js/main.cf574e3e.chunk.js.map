{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/ExpenseList.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpensesFilter","value","selected","onChange","event","onChangeFilter","target","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","ExpenseItem","title","amount","ExpensesList","items","length","map","expense","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","expenses","getMonth","ExpenseList","useState","filteredYear","setFilteredYear","filteredExpenses","filter","toString","selectedYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","console","log","type","required","min","step","onClick","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","random","onAddExpense","dummy_exps","App","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cf574e3e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './Card.css';\r\n\r\nconst Card = (props) => {\r\n  const classes = 'card ' + props.className;\r\n\r\n  return <div className={classes}>{props.children}</div>;\r\n};\r\n\r\nexport default Card;","import React from 'react';\r\n\r\nimport './ExpensesFilter.css';\r\n\r\nconst ExpensesFilter = (props) => {\r\n  const dropdownChangeHandler = (event) => {\r\n    props.onChangeFilter(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className='expenses-filter'>\r\n      <div className='expenses-filter__control'>\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={dropdownChangeHandler}>\r\n          <option value='2022'>2022</option>\r\n          <option value='2021'>2021</option>\r\n          <option value='2020'>2020</option>\r\n          <option value='2019'>2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;","import \"./ExpenseDate.css\"\r\nfunction ExpenseDate(props){\r\nconst month = props.date.toLocaleString('en-US', {month: \"long\"}); \r\n  const day = props.date.toLocaleString('en-US', {day: \"2-digit\"});\r\n  const year = props.date.getFullYear();\r\n\r\n  return (<div className=\"expense-date\">\r\n  <div className=\"expense-date__month\">{month}</div>\r\n  <div className=\"expense-date__day\">{day}</div>\r\n  <div className=\"expense-date__year\">{year}</div>\r\n</div>)\r\n}\r\n\r\nexport default ExpenseDate;","import React from 'react';\r\n//useState ALWAYS returns a two item array\r\n\r\nimport \"./ExpenseItem.css\";\r\nimport ExpenseDate from \"./ExpenseDate\";\r\nimport Card from '../UI/Card'\r\n\r\nconst ExpenseItem = (props) => {\r\n  // console.log('hi');\r\n  // below syntax is for useState(), [first element is a pointer to the value, second value is the function ]\r\n  // const [title, setTitle] = useState(props.title);\r\n\r\n  // const clickHandler = () => {\r\n  //   setTitle('Updated!')\r\n  // Consider naming functions that handle events ending with \"Handler\"\r\n  //   console.log(title);\r\n  // }\r\n\r\n  return (\r\n    <li>\r\n    <Card className=\"expense-item\">\r\n      <ExpenseDate date={props.date}/>\r\n      \r\n      <div className=\"expense-item__description\">\r\n        <h2>{props.title}</h2>\r\n        <div className=\"expense-item__price\">{props.amount}</div>\r\n      </div>\r\n    </Card>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default ExpenseItem;\r\n","\r\n\r\n\r\nimport React from 'react';\r\n\r\nimport ExpenseItem from './ExpenseItem'\r\nimport \"./ExpensesList.css\"\r\n\r\nconst ExpensesList = props => {\r\n\r\n    if (props.items.length === 0) {\r\n        return <h2 className='expenses-list__fallback'>Found No Expenses.</h2>\r\n\r\n    }\r\n\r\n    return <ul className='expenses-list'>\r\n        {props.items.map((expense) => (\r\n        <ExpenseItem\r\n          key={expense.id}\r\n          title={expense.title}\r\n          amount={expense.amount}\r\n          date={expense.date}\r\n        />\r\n      ))}\r\n\r\n    </ul>\r\n\r\n}\r\n\r\nexport default ExpensesList","import React from \"react\";\r\n\r\nimport \"./ChartBar.css\";\r\n\r\n\r\nconst ChartBar = (props) => {\r\n    let barFillHeight = '0%';\r\n\r\n    if (props.maxValue > 0) {\r\n        barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\r\n    }\r\n\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div className=\"chart-bar__fill\" style={{ height: barFillHeight }}> </div>\r\n      </div>\r\n      <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;\r\n","import React from \"react\";\r\n\r\nimport ChartBar from \"./ChartBar\";\r\nimport \"./Chart.css\";\r\n\r\nconst Chart = (props) => {\r\n    const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\r\nconst totalMaximum = Math.max(...dataPointValues) //NOTICE THE SPREAD- PULLS EACH VALUE OUT \r\n\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n        key={dataPoint.label}\r\n          value={dataPoint.value}\r\n          maxValue={totalMaximum}\r\n          label={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React from 'react';\r\nimport Chart from '../Chart/Chart'\r\n\r\n\r\nconst ExpensesChart = (props) => {\r\nconst chartDataPoints = [\r\n        { label: 'Jan', value: 0 },\r\n        { label: 'Feb', value: 0 },\r\n        { label: 'Mar', value: 0 },\r\n        { label: 'Apr', value: 0 },\r\n        { label: 'May', value: 0 },\r\n        { label: 'Jun', value: 0 },\r\n        { label: 'Jul', value: 0 },\r\n        { label: 'Aug', value: 0 },\r\n        { label: 'Sep', value: 0 },\r\n        { label: 'Oct', value: 0 },\r\n        { label: 'Nov', value: 0 },\r\n        { label: 'Dec', value: 0 }\r\n];\r\n\r\nfor (const expense of props.expenses) {\r\n    const expenseMonth = expense.date.getMonth(); //Staring at 0 => Jan is 0\r\n    chartDataPoints[expenseMonth].value += expense.amount;\r\n\r\n}\r\n\r\n    return <Chart dataPoints={chartDataPoints}/>\r\n}\r\n\r\nexport default ExpensesChart;","import React, { useState } from \"react\";\r\n\r\nimport Card from \"../UI/Card\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport ExpensesList from \"./ExpensesList\"\r\nimport ExpensesChart from \"./ExpensesChart\"\r\n\r\nimport \"./ExpenseList.css\";\r\n\r\nfunction ExpenseList(props) {\r\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\r\n\r\n  const filterChangeHandler = (selectedYear) => {\r\n    setFilteredYear(selectedYear);\r\n  };\r\n\r\n  const filteredExpenses = props.items.filter(expense => {\r\n    return expense.date.getFullYear().toString() === filteredYear;\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <Card className=\"expenses\">\r\n        <ExpensesFilter\r\n          selected={filteredYear}\r\n          onChangeFilter={filterChangeHandler}\r\n        />\r\n        <ExpensesChart expenses={filteredExpenses}/>\r\n        <ExpensesList items={filteredExpenses}/>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExpenseList;\r\n","import React, { useState } from 'react';\r\n\r\nimport './ExpenseForm.css';\r\n\r\nconst ExpenseForm = (props) => { \r\n    const [enteredTitle, setEnteredTitle] = useState('');\r\n    const [enteredAmount, setEnteredAmount] = useState('');\r\n    const [enteredDate, setEnteredDate] = useState('');\r\n\r\n     \r\n    const titleChangeHandler = (event) => {\r\n\r\n        console.log(\"new title\", event.target.value);\r\n        setEnteredTitle(event.target.value);\r\n\r\n        // SHOULD USE THE BELOW FORMAT WHEN DEPENDING ON PRIOR STATE\r\n        // setUserInput((prevState) => {\r\n        //     return {...prevState, enteredTitle: event.target.value}\r\n        // });\r\n\r\n    };\r\n    \r\n\r\n    const amountChangeHandler = (event) => {\r\n\r\n        setEnteredAmount(event.target.value);\r\n\r\n    };\r\n\r\n    const dateChangeHandler = (event) => {\r\n\r\n        setEnteredDate(event.target.value);\r\n\r\n    };\r\n    const submitHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        const expenseData = {\r\n            title: enteredTitle,\r\n            amount: +enteredAmount,\r\n            date: new Date(enteredDate),\r\n\r\n        };\r\n\r\n\r\n        props.onSaveExpenseData(expenseData);\r\n        setEnteredTitle('');\r\n        setEnteredAmount('');\r\n        setEnteredDate('');\r\n    }; \r\n\r\nreturn (\r\n<form onSubmit={submitHandler}>\r\n    <div className=\"new-expense__controls\">\r\n        <div className='new-expense__control'>\r\n            <label>Title</label>\r\n            <input onChange={titleChangeHandler} type='text' required value={enteredTitle}/>\r\n        </div>\r\n        <div className='new-expense__control'>\r\n            <label>Amount</label>\r\n            <input onChange={amountChangeHandler} type='number' min=\"0.01\" step=\"0.01\" required value={enteredAmount}/>\r\n\r\n        </div>\r\n        <div className='new-expense__control'>\r\n            <label>Date</label> \r\n            <input onChange={dateChangeHandler} type='date' min='2019-01-01'max='2022-12-31' required value={enteredDate}/>\r\n        </div>\r\n    </div>\r\n    <div className='new-expense__actions'>\r\n        <button type=\"button\" onClick={props.onCancel}>Close</button>\r\n        <button type='submit'>Add Expense</button>\r\n    </div>\r\n\r\n</form>\r\n)\r\n};\r\n\r\nexport default ExpenseForm;","import React, { useState } from \"react\";\r\n\r\nimport ExpenseForm from \"./ExpenseForm\";\r\n\r\nimport \"./NewExpense.css\";\r\n\r\nconst NewExpense = (props) => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  const saveExpenseDataHandler = (enteredExpenseData) => {\r\n    const expenseData = {\r\n      ...enteredExpenseData,\r\n      id: Math.random().toString(),\r\n    };\r\n    props.onAddExpense(expenseData);\r\n    setIsEditing(false);\r\n  };\r\n\r\n  const startEditingHandler = () => {\r\n    setIsEditing(true);\r\n  };\r\n\r\n  const stopEditingHandler = () => {\r\n    setIsEditing(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"new-expense\">\r\n      {!isEditing && (\r\n        <button onClick={startEditingHandler}>Add New Expense</button>\r\n      )}\r\n      {isEditing && (\r\n        <ExpenseForm\r\n          onSaveExpenseData={saveExpenseDataHandler}\r\n          onCancel={stopEditingHandler}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewExpense;\r\n","import React, { useState } from 'react';\r\n\r\nimport ExpenseList from \"./components/Expenses/ExpenseList\";\r\nimport NewExpense from \"./components/NewExpense/NewExpense\";\r\n\r\n\r\n\r\n\r\n  const dummy_exps = [\r\n    {\r\n      id: 'e1',\r\n      title: 'Toilet Paper',\r\n      amount: 94.12,\r\n      date: new Date(2020, 7, 14),\r\n    },\r\n    { id: 'e2', title: 'New TV', amount: 799.49, date: new Date(2021, 2, 12) },\r\n    {\r\n      id: 'e3',\r\n      title: 'Car Insurance',\r\n      amount: 294.67,\r\n      date: new Date(2021, 2, 28),\r\n    },\r\n    {\r\n      id: 'e4',\r\n      title: 'New Desk (Wooden)',\r\n      amount: 450,\r\n      date: new Date(2021, 5, 12),\r\n    },\r\n  ];\r\n\r\n\r\n\r\n  const App = () => {\r\n    const [expenses, setExpenses] = useState(dummy_exps);\r\n\r\n\r\n  const addExpenseHandler = (expense) => {\r\n    setExpenses((prevExpenses) => {\r\n      return [expense, ...prevExpenses]\r\n    });\r\n  }\r\n\r\n\r\n//SPREAD OPPERATOR ABOVE will pull out all of the existing array elements. You can use the SPREAD opperator objkects and arrays. \r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <NewExpense onAddExpense={addExpenseHandler}/>\r\n      <ExpenseList items={expenses}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}